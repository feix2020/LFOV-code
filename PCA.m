% PCA for fig3

% Dependencies:
% mask and region_map_t are generated by: mask_and_register.mat

% load DAT data
clear;clc
myPath = 'D:\demo';
cd(myPath)
rawData = [];
allFileName = dir(fullfile(myPath, '*.dat'));
for i = 1:size(allFileName,1)
    fn = fullfile(myPath,allFileName(i).name);
    matdata = DAT2mat_x(fn);
    rawData = cat(3, rawData, matdata);
    clear matdata
end
msg = 'loaded all imaging data'

% df/f
avg_img = squeeze(mean(rawData,3));
df = double(rawData);
for i = 1:size(rawData,3)
    df(:,:,i) = (double(squeeze(df(:,:,i)))-avg_img)./avg_img;
end

% gsr
frames = reshape(df,[size(df,1)*size(df,2),size(df,3)]);
frames = frames';
mean_g = mean(frames, 2);
g_plus = squeeze(pinv(mean_g));
beta_g = g_plus * frames;
global_signal = mean_g * beta_g;
df470gsr = frames - global_signal;
df_gsr = reshape(df470gsr',[size(df,1) size(df,2) size(df,3)]);
clear df470gsr global_signal beta_g frames

% mask
load('mask.mat')
load('mask_map.mat')
mask = ~mask;
region_mask = region_map_t>0;
mask_temp = mask.*region_mask;
temp = repmat(mask_temp,[1 1 size(df,3)]);
df_gsr = df_gsr.*temp;

%% pca
df_linear = reshape(df_gsr,size(df,1)*size(df,2),size(df,3));
[coeff,score,latent,~,explained] = pca(df_linear);
df_linear_tranformed = df_linear*coeff;

% post pca
pcs = reshape(df_linear_tranformed,size(df,1),size(df,2),size(df_linear,2));
pcs = pcs(:,:,1:100);
coeff = coeff(:,1:100);
%% plot
imdisp(pcs(:,:,1:6))